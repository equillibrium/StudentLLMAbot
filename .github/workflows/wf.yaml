---
name: Build and push docker image, deploy to k3s
on:
  push:
    branches: [ main ]
jobs:
  build:
    name: Build bot docker image
    runs-on: k3s-runner
    permissions:
      packages: write
      contents: read

    steps:
      - run: |
          export repo=${{ github.repository }}
          PROJECT=$(echo "${repo#*/}" | tr '[:upper:]' '[:lower:]')
          echo "PROJECT=$PROJECT" >> $GITHUB_ENV
          echo ${{ github.env }}

#      - uses: actions/checkout@v2
#
#      - uses: docker/login-action@v2
#        with:
#          registry: ghcr.io
#          username: ${{ github.actor }}
#          password: ${{ secrets.GITHUB_TOKEN }}
#
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v2
#
#      - name: Build and push
#        uses: docker/build-push-action@v2
#        with:
#          push: 'true'
#          cache-from: ghcr.io/equillibrium/studentllmabot:cache
#          cache-to: ghcr.io/equillibrium/studentllmabot:cache
#          tags: ghcr.io/equillibrium/studentllmabot:latest
#
#  deploy:
#    name: Deploy to k3s
#    runs-on: k3s-runner
#    needs: build
#
#    steps:
#      - uses: tale/kubectl-action@v1
#        with:
#          base64-kube-config: ${{ secrets.KUBE_CONFIG }}
#
#      - run: kubectl create namespace student-llma-bot || true
#
#      - run: |
#          kubectl create secret docker-registry ghcr \
#            -n "student-llma-bot" \
#            --docker-server=ghcr.io \
#            --docker-username=${{ github.actor }} \
#            --docker-password=${{ secrets.GITHUB_TOKEN }} \
#            --docker-email=kotobars@gmail.com \
#            --dri
#
#      - run: |
#          kubectl create secret generic "student-llma-bot" \
#            -n "student-llma-bot" \
#            --from-literal=TELEGRAM_BOT_TOKEN="${{ secrets.TELEGRAM_BOT_TOKEN }}" \
#            --from-literal=GROQ_API_KEY="${{ secrets.GROQ_API_KEY }}"
#
#      - uses: actions/checkout@v2
#
#      - name: Kubectl apply deployment
#        uses: actions-hub/kubectl@master
#        env:
#          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
#        with:
#          args: apply -f k8s/deployment.yaml